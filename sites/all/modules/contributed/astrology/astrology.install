<?php
/**
 * @file
 * Astrology installation
 */

/**
 * Implements hook_install().
 */
function astrology_install() {  // takes no parameters
	// Set default variables.
	variable_set('astrology_name_first', '');
	variable_set('astrology_name_last', '');
	variable_set('astrology_birth_city', '');
	variable_set('astrology_birth_state', '');
	variable_set('astrology_natal_sun', '');
	variable_set('astrology_natal_moon', '');
	variable_set('astrology_natal_asc', '');

	// Get localization function for installation as t() may be unavailable.
	$t = get_t();
	
	// Give user feedback.
	drupal_set_message($t('Astrology variables created.'));
	
	// Content type definition
	$content_type = array( // Order of keys is unimportant.
		'type' => 'astrology', // Machine name
		'name' => $t('Astrology'), // Human-readable name.
		'description' => $t('Astrological delineation information.'),
		'title-label' => $t('Astrology information'),
		'base' => 'node_content',
		'custom' => TRUE, // Flag; indicates an add content type was used
	);
	
	// Set the remaining definitions with defaults
	$node_type = node_type_set_defaults($content_type);
	
	// Save the content type.
	node_type_save($node_type);
	
	// Add a field for the body.
	node_add_body_field($node_type, $t('Description'));
	
	// Create fields.
	$fields = array();
	
	$fields['astrology_name_first'] = array(
		'field_name' => 'astrology_name_first',
		'type' => 'text',
		'settings' => array(
			'max_length' => 30,
		),
	);

	$fields['astrology_name_last'] = array(
		'field_name' => 'astrology_name_last',
		'type' => 'text',
		'settings' => array(
			'max_length' => 30,
		),
	);

	$fields['astrology_birth_city'] = array(
		'field_name' => 'astrology_birth_city',
		'type' => 'text',
		'settings' => array(
			'max_length' => 30,
		),
	);

	$fields['astrology_birth_state'] = array(
		'field_name' => 'astrology_birth_state',
		'type' => 'text',
		'settings' => array(
			'max_length' => 2,
		),
	);

	$fields['astrology_natal_sun'] = array(
		'field_name' => 'astrology_natal_sun',
		'type' => 'text',
		'settings' => array(
			'max_length' => 7,
		),
	);

	$fields['astrology_natal_moon'] = array(
		'field_name' => 'astrology_natal_moon',
		'type' => 'text',
		'settings' => array(
			'max_length' => 7,
		),
	);

	$fields['astrology_natal_asc'] = array(
		'field_name' => 'astrology_natal_asc',
		'type' => 'text',
		'settings' => array(
			'max_length' => 7,
		),
	);

	foreach ($fields as $field) {
		field_create_field($field);
	}

	// Create Field Instances
	$instances = array(); // Start by creating an empty array for the instances

	$instances['astrology_name_first'] = array(
		'field_name' => 'astrology_name_first',
		'label' => $t('First name'),
		'description' =>$t('The individual\'s first name - first leter capitalized, text only'),
		'widget' => array(
			'type' => 'text_textfield',
		),
		'required' => TRUE,
		'settings' => array(
			'text_processing' => 0,
		),
	    'display' => array(
	      'default' => array(
	        'label' => 'inline',
	      ),
	    ),
	  );

	$instances['astrology_name_last'] = array(
		'field_name' => 'astrology_name_last',
		'label' => $t('Last name'),
		'description' =>$t('The individual\'s last name - first leter capitalized, text only'),
		'widget' => array(
			'type' => 'text_textfield',
		),
		'required' => TRUE,
		'settings' => array(
			'text_processing' => 0,
		),
	    'display' => array(
	      'default' => array(
	        'label' => 'inline',
	      ),
	    ),
	  );

	$instances['astrology_birth_city'] = array(
		'field_name' => 'astrology_birth_city',
		'label' => $t('Birth City'),
		'description' =>$t('The individual\'s birth city - first leter capitalized, text only'),
		'widget' => array(
			'type' => 'text_textfield',
		),
		'required' => TRUE,
		'settings' => array(
			'text_processing' => 0,
		),
	    'display' => array(
	      'default' => array(
	        'label' => 'inline',
	      ),
	    ),
	  );

	$instances['astrology_birth_state'] = array(
		'field_name' => 'astrology_birth_state',
		'label' => $t('Birth State'),
		'description' =>$t('The individual\'s birth state - 2 letter capitalized state code'),
		'widget' => array(
			'type' => 'text_textfield',
		),
		'required' => TRUE,
		'settings' => array(
			'text_processing' => 0,
		),
	    'display' => array(
	      'default' => array(
	        'label' => 'inline',
	      ),
	    ),
	  );

	$instances['astrology_natal_sun'] = array(
		'field_name' => 'astrology_natal_sun',
		'label' => $t('Sun position'),
		'description' =>$t('The position of the Sun. format: ddSSSmm ex.03LIB36'),
		'widget' => array(
			'type' => 'text_textfield',
		),
		'required' => TRUE,
		'settings' => array(
			'text_processing' => 0,
		),
	    'display' => array(
	      'default' => array(
	        'label' => 'inline',
	      ),
	    ),
	  );
	
	$instances['astrology_natal_moon'] = array(
		'field_name' => 'astrology_natal_moon',
		'label' => $t('Moon position'),
		'description' =>$t('The position of the Moon. format: ddSSSmm ex.03LIB36'),
		'widget' => array(
			'type' => 'text_textfield',
		),
		'required' => TRUE,
		'settings' => array(
			'text_processing' => 0,
		),
	    'display' => array(
	      'default' => array(
	        'label' => 'inline',
	      ),
	    ),
	  );

	$instances['astrology_natal_asc'] = array(
		'field_name' => 'astrology_natal_asc',
		'label' => $t('Ascendent position'),
		'description' =>$t('The position of the Ascendent. format: ddSSSmm ex.03LIB36'),
		'widget' => array(
			'type' => 'text_textfield',
		),
		'required' => TRUE,
		'settings' => array(
			'text_processing' => 0,
		),
	    'display' => array(
	      'default' => array(
	        'label' => 'inline',
	      ),
	    ),
	  );

	foreach($instances as $instance) {
		$instance['entity_type'] = 'node';
		$instance['bundle'] = 'astrology';
		field_create_instance($instance);
	}
}

/**
 * Implements hook_uninstall().
 */
function astrology_uninstall() {
	// Delete variables created with hook_install. (takes no parameters)
	variable_del('astrology_name_first');
	variable_del('astrology_name_last');
	variable_del('astrology_birth_city');
	variable_del('astrology_birth_state');
	variable_del('astrology_natal_sun');
	variable_del('astrology_natal_moon');
	variable_del('astrology_natal_asc');
		
	// Give user feedback.
	$t = get_t();
	drupal_set_message($t('Astrology variables removed.'));

	// Get all node IDs with astrology content type.
	$sql_query  = 'SELECT nid ';
	$sql_query .= 'FROM {node} ';
	$sql_query .= 'WHERE {node}.type = :type ';
	$result = db_query($sql_query, array(':type' => 'astrology'));

	$nids = array();
	foreach ($result as $row) {
		$nids[] = $row->nid;
	}

	// Delete all astrology content.
	node_delete_multiple($nids);
	drupal_set_message($t('Astrology content removed.'));

	// Remove all fields and field instances.
	foreach (field_info_instances('node', 'astrology') as $field_name => $instance) {
		field_delete_field($field_name);
		field_delete_instance($instance);
	}
	drupal_set_message($t('Astrology field and field instances removed.'));

	// Delete the content type.
	node_type_delete('astrology');
	drupal_set_message($t('Astrology Content Type removed.'));

	// Clean up deleted fields.
	field_purge_batch(1000);
}
